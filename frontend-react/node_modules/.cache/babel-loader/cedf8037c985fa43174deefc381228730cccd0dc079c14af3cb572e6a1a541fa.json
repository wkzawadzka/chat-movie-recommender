{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\weraz\\\\Pictures\\\\Sem6\\\\MovieRecommender\\\\chat-movie-recommender\\\\frontend-react\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Rings } from 'react-loader-spinner';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Card from 'react-bootstrap/Card';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [value, setValue] = useState('');\n  const [load, setLoad] = useState('');\n  const [empty, setEmpty] = useState(false);\n  const [notExist, setNotExist] = useState(false);\n  const [movies, setMovies] = useState(false);\n  const [showCardContainer, setShowCardContainer] = useState(true); // New state variable\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredMovieTitles, setFilteredMovieTitles] = useState([]);\n  const [selectedMovieTitle, setSelectedMovieTitle] = useState('');\n  const [showModal, setShowModal] = useState(false); // New state variable\n  const [selectedCard, setSelectedCard] = useState(null); // New state variable\n  const movieTitles = [\"Toy Story (1995)\"];\n  const [isEditing, setIsEditing] = useState(false);\n  const handleSearchQueryChange = event => {\n    setSearchQuery(event.target.value);\n  };\n  const handleKeyDown = event => {\n    if (event.key === 'Enter') {\n      setIsEditing(false);\n    }\n  };\n  const handleClick = () => {\n    setIsEditing(true);\n  };\n  const handleMovieTitleClick = title => {\n    setSelectedMovieTitle(title);\n    setFilteredMovieTitles([]);\n    setSearchQuery(title);\n  };\n  const handleCardClick = card => {\n    setSelectedCard(card);\n    fetchMovieImage(card);\n    setShowModal(true);\n  };\n  const fetchMovieImage = async card => {\n    const v = 'title';\n    if (card.hasOwnProperty(v)) {\n      let title = card[v];\n      title = title.split('(')[0].trim();\n      const base_url = 'https://api.themoviedb.org/3/search/movie';\n      const api_key = process.env.REACT_APP_API_KEY;\n      const params = {\n        api_key: api_key,\n        query: title\n      };\n      const response = await axios.get(base_url, {\n        params\n      });\n      if (typeof response.data.results[0].poster_path !== 'undefined') {\n        const poster_path = response.data.results[0].poster_path;\n        const base_img_url = 'https://image.tmdb.org/t/p/';\n        const size = 'w500';\n        const img_url = `${base_img_url}${size}${poster_path}`;\n        setSelectedCard(prevCard => ({\n          ...prevCard,\n          imgUrl: img_url\n        }));\n      }\n    }\n  };\n  const splitMoviesIntoGroups = (movies, groupSize) => {\n    const movieKeys = Object.keys(movies[0]);\n    const groups = [];\n    let currentGroup = {};\n    let i = 0;\n    movieKeys.forEach((key, index) => {\n      i = i + 1;\n      const movie = movies[0][key];\n      console.log(movie);\n      currentGroup[key] = movie;\n      if ((index + 1) % groupSize === 0 || index === movieKeys.length - 1) {\n        groups.push(currentGroup);\n        currentGroup = {};\n      }\n    });\n    return groups;\n  };\n  const toggleCardContainer = () => {\n    setShowCardContainer(!showCardContainer);\n  };\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  async function fetchData() {\n    setMovies(false);\n    setEmpty(false);\n    setNotExist(false);\n    if (selectedMovieTitle === '') {\n      setEmpty(true);\n    } else {\n      setLoad(true);\n      // dummy \"Toy Story (1995)\" for now\n      await axios.get(`http://localhost:8000/get_strategy/Toy Story (1995)`).then(response => {\n        // await axios.get(`http://localhost:8000/get_strategy/` + selectedMovieTitle).then((response) => {\n        if (response.data[0] !== false) {\n          setMovies(response.data);\n          setLoad(false);\n        } else {\n          setLoad(false);\n          setNotExist(true);\n        }\n      });\n    }\n  }\n  function handleInputChange(event) {\n    setValue(event.target.value);\n  }\n  useEffect(() => {\n    setLoad(false);\n    setEmpty(false);\n    setMovies(false);\n    setNotExist(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: '20px',\n          color: 'white'\n        },\n        children: \"Recommendation movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: handleClick,\n            style: {\n              width: '300px',\n              border: '1px solid #ccc',\n              padding: '5px'\n            },\n            children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: searchQuery,\n              onChange: handleSearchQueryChange,\n              onKeyDown: handleKeyDown,\n              onBlur: () => setIsEditing(false) // Add onBlur event to stop editing when focus is lost\n              ,\n              autoFocus: true // Focus the input field automatically when it appears\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 11\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: searchQuery ? searchQuery : 'An old animation movie about cats'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this), \"           \", filteredMovieTitles.length > 0 ? /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: filteredMovieTitles.map((title, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              onClick: () => handleMovieTitleClick(title),\n              active: selectedMovieTitle === title,\n              action: true,\n              children: title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            style: {\n              padding: '5px 10px',\n              borderRadius: '5px',\n              border: 'none',\n              backgroundColor: '#4fa94d',\n              color: '#fff',\n              fontSize: '14px',\n              cursor: 'pointer'\n            },\n            onClick: fetchData,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), load && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: '10vh'\n        },\n        children: [\"           \", /*#__PURE__*/_jsxDEV(Rings, {\n          height: \"150\",\n          width: \"120\",\n          color: \"#4fa94d\",\n          radius: \"6\",\n          visible: true,\n          ariaLabel: \"rings-loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 109\n        }, this), \"         \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 1\n      }, this), movies && Object.keys(movies).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            color: 'white'\n          },\n          children: \"Similar Movies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"idex-card-container\",\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap'\n          },\n          children: splitMoviesIntoGroups(movies, 5).map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex'\n            },\n            children: Object.values(group).map((movie, idx) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  margin: '10px'\n                },\n                children: /*#__PURE__*/_jsxDEV(ShowMovieDetails, {\n                  movie: movie,\n                  onClick: () => handleCardClick(movie)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, this);\n            })\n          }, groupIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showModal,\n        onHide: handleCloseModal,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.imgUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this), (selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.genre) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Genre:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 17\n            }, this), \" \", selectedCard.genre.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), (selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.actors) && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Actors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), \" \", selectedCard.actors.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: handleCloseModal,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lNESy2DfOf+Nrtr/zYVreNazYtI=\");\n_c = App;\nfunction ShowMovieDetails(props) {\n  _s2();\n  const {\n    title,\n    overview,\n    genre,\n    actors\n  } = props.movie;\n  const [imgUrl, setImgUrl] = useState('');\n  useEffect(() => {\n    fetchMovieImage();\n  }, []);\n  const fetchMovieImage = async () => {\n    const v = 'title';\n    if (props.movie.hasOwnProperty(v)) {\n      let title = props.movie[v];\n      title = title.split('(')[0].trim();\n      const base_url = 'https://api.themoviedb.org/3/search/movie';\n      const api_key = process.env.REACT_APP_API_KEY;\n      const params = {\n        api_key: api_key,\n        query: title\n      };\n      const response = await axios.get(base_url, {\n        params\n      });\n      if (typeof response.data.results[0].poster_path !== 'undefined') {\n        const poster_path = response.data.results[0].poster_path;\n        const base_img_url = 'https://image.tmdb.org/t/p/';\n        const size = 'w500';\n        const img_url = `${base_img_url}${size}${poster_path}`;\n        setImgUrl(img_url);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18rem',\n      height: '100%',\n      display: 'flex'\n    },\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n      variant: \"top\",\n      src: imgUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: overview.slice(0, 100)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 274,\n    columnNumber: 5\n  }, this);\n}\n_s2(ShowMovieDetails, \"5tJDJ61OtePcqUrUKpQTSzHPtDk=\");\n_c2 = ShowMovieDetails;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ShowMovieDetails\");","map":{"version":3,"names":["Button","React","useState","useEffect","axios","Rings","Card","ListGroup","Modal","jsxDEV","_jsxDEV","App","_s","value","setValue","load","setLoad","empty","setEmpty","notExist","setNotExist","movies","setMovies","showCardContainer","setShowCardContainer","searchQuery","setSearchQuery","filteredMovieTitles","setFilteredMovieTitles","selectedMovieTitle","setSelectedMovieTitle","showModal","setShowModal","selectedCard","setSelectedCard","movieTitles","isEditing","setIsEditing","handleSearchQueryChange","event","target","handleKeyDown","key","handleClick","handleMovieTitleClick","title","handleCardClick","card","fetchMovieImage","v","hasOwnProperty","split","trim","base_url","api_key","process","env","REACT_APP_API_KEY","params","query","response","get","data","results","poster_path","base_img_url","size","img_url","prevCard","imgUrl","splitMoviesIntoGroups","groupSize","movieKeys","Object","keys","groups","currentGroup","i","forEach","index","movie","console","log","length","push","toggleCardContainer","handleCloseModal","fetchData","then","handleInputChange","className","children","style","margin","color","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","alignItems","marginBottom","onClick","width","border","padding","type","onChange","onKeyDown","onBlur","autoFocus","map","Item","active","action","variant","borderRadius","backgroundColor","fontSize","cursor","height","radius","visible","ariaLabel","flexWrap","group","groupIndex","values","idx","ShowMovieDetails","show","onHide","Header","closeButton","Title","Body","Img","src","overview","genre","join","actors","Footer","_c","props","_s2","setImgUrl","Text","slice","_c2","$RefreshReg$"],"sources":["C:/Users/weraz/Pictures/Sem6/MovieRecommender/chat-movie-recommender/frontend-react/src/App.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\r\nimport './App.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Rings } from 'react-loader-spinner';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState('');\r\n  const [load, setLoad] = useState('');\r\n  const [empty, setEmpty] = useState(false);\r\n  const [notExist, setNotExist] = useState(false);\r\n  const [movies, setMovies] = useState(false);\r\n  const [showCardContainer, setShowCardContainer] = useState(true); // New state variable\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filteredMovieTitles, setFilteredMovieTitles] = useState([]);\r\n  const [selectedMovieTitle, setSelectedMovieTitle] = useState('');\r\n  const [showModal, setShowModal] = useState(false); // New state variable\r\n  const [selectedCard, setSelectedCard] = useState(null); // New state variable\r\n  const movieTitles = [\"Toy Story (1995)\"];\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleSearchQueryChange = (event) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Enter') {\r\n      setIsEditing(false);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleMovieTitleClick = (title) => {\r\n    setSelectedMovieTitle(title);\r\n    setFilteredMovieTitles([]);\r\n    setSearchQuery(title);\r\n  };\r\n  const handleCardClick = (card) => {\r\n    setSelectedCard(card);\r\n    fetchMovieImage(card);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const fetchMovieImage = async (card) => {\r\n    const v = 'title';\r\n    if (card.hasOwnProperty(v)) {\r\n      let title = card[v];\r\n      title = title.split('(')[0].trim();\r\n      const base_url = 'https://api.themoviedb.org/3/search/movie';\r\n      const api_key = process.env.REACT_APP_API_KEY;\r\n      const params = { api_key: api_key, query: title };\r\n      const response = await axios.get(base_url, { params });\r\n      if (typeof response.data.results[0].poster_path !== 'undefined') {\r\n        const poster_path = response.data.results[0].poster_path;\r\n        const base_img_url = 'https://image.tmdb.org/t/p/';\r\n        const size = 'w500';\r\n        const img_url = `${base_img_url}${size}${poster_path}`;\r\n        setSelectedCard((prevCard) => ({\r\n          ...prevCard,\r\n          imgUrl: img_url\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const splitMoviesIntoGroups = (movies, groupSize) => {\r\n    const movieKeys = Object.keys(movies[0]);\r\n    const groups = [];\r\n    let currentGroup = {};\r\n    let i = 0;\r\n    movieKeys.forEach((key, index) => {\r\n      i = i + 1;\r\n      const movie = movies[0][key];\r\n      console.log(movie)\r\n      currentGroup[key] = movie;\r\n\r\n      if ((index + 1) % groupSize === 0 || index === movieKeys.length - 1) {\r\n        groups.push(currentGroup);\r\n        currentGroup = {};\r\n      }\r\n    });\r\n    return groups;\r\n  };\r\n\r\n  const toggleCardContainer = () => {\r\n    setShowCardContainer(!showCardContainer);\r\n  };\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n\r\n  async function fetchData() {\r\n    setMovies(false);\r\n    setEmpty(false);\r\n    setNotExist(false);\r\n\r\n    if (selectedMovieTitle === '') {\r\n      setEmpty(true);\r\n    } else {\r\n      setLoad(true);\r\n      // dummy \"Toy Story (1995)\" for now\r\n      await axios.get(`http://localhost:8000/get_strategy/Toy Story (1995)`).then((response) => {\r\n      // await axios.get(`http://localhost:8000/get_strategy/` + selectedMovieTitle).then((response) => {\r\n        if (response.data[0] !== false) {\r\n          setMovies(response.data);\r\n          setLoad(false);\r\n        } else {\r\n          setLoad(false);\r\n          setNotExist(true);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleInputChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoad(false);\r\n    setEmpty(false);\r\n    setMovies(false);\r\n    setNotExist(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        <h2 style={{ margin: '20px', color: 'white' }}>Recommendation movie</h2>\r\n        <form style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\r\n          <div>\r\n          <div\r\n        onClick={handleClick}\r\n        style={{ width: '300px', border: '1px solid #ccc', padding: '5px' }}\r\n      >\r\n        {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            value={searchQuery}\r\n            onChange={handleSearchQueryChange}\r\n            onKeyDown={handleKeyDown}\r\n            onBlur={() => setIsEditing(false)} // Add onBlur event to stop editing when focus is lost\r\n            autoFocus // Focus the input field automatically when it appears\r\n          />\r\n        ) : (\r\n          <div>{searchQuery ? searchQuery : 'An old animation movie about cats'}</div>\r\n        )}\r\n      </div>           {filteredMovieTitles.length > 0 ? (\r\n              <ListGroup>\r\n                {filteredMovieTitles.map((title, index) => (\r\n                  <ListGroup.Item\r\n                    key={index}\r\n                    onClick={() => handleMovieTitleClick(title)}\r\n                    active={selectedMovieTitle === title}\r\n                    action\r\n                  >\r\n                    {title}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            ) : (\r\n              <p></p>\r\n            )}\r\n            <Button\r\n              variant=\"primary\"\r\n              style={{\r\n                padding: '5px 10px',\r\n                borderRadius: '5px',\r\n                border: 'none',\r\n                backgroundColor: '#4fa94d',\r\n                color: '#fff',\r\n                fontSize: '14px',\r\n                cursor: 'pointer',\r\n              }}\r\n              onClick={fetchData}\r\n            >\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </form>\r\n\r\n        {load && (\r\n<div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '10vh' }}>           <Rings height=\"150\" width=\"120\" color=\"#4fa94d\" radius=\"6\" visible={true} ariaLabel=\"rings-loading\" />         </div>\r\n        )}\r\n\r\n{movies && Object.keys(movies).length > 0 && (\r\n      <div className=\"card-container\">\r\n        <h1 style={{ color: 'white' }}>Similar Movies</h1>\r\n        <div className=\"idex-card-container\" style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n          {splitMoviesIntoGroups(movies, 5).map((group, groupIndex) => (\r\n            <div key={groupIndex} style={{ display: 'flex',}}>\r\n              {Object.values(group).map((movie, idx) => {\r\n                return (\r\n                  <div key={idx} style={{ margin: '10px' }}>\r\n                    <ShowMovieDetails\r\n                      movie={movie}\r\n                      onClick={() => handleCardClick(movie)}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  </div>\r\n)}\r\n\r\n        <Modal show={showModal} onHide={handleCloseModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedCard?.title}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Card.Img variant=\"top\" src={selectedCard?.imgUrl} />\r\n            <p>{selectedCard?.overview}</p>\r\n            {selectedCard?.genre && (\r\n              <p>\r\n                <strong>Genre:</strong> {selectedCard.genre.join(', ')}\r\n              </p>\r\n            )}\r\n            {selectedCard?.actors && (\r\n              <p>\r\n                <strong>Actors:</strong> {selectedCard.actors.join(', ')}\r\n              </p>\r\n            )}\r\n            {/* Additional card information can be displayed here */}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShowMovieDetails(props) {\r\n  const { title, overview, genre, actors } = props.movie;\r\n  const [imgUrl, setImgUrl] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchMovieImage();\r\n  }, []);\r\n\r\n  const fetchMovieImage = async () => {\r\n    const v = 'title';\r\n    if (props.movie.hasOwnProperty(v)) {\r\n      let title = props.movie[v];\r\n      title = title.split('(')[0].trim();\r\n      const base_url = 'https://api.themoviedb.org/3/search/movie';\r\n      const api_key = process.env.REACT_APP_API_KEY;\r\n      const params = { api_key: api_key, query: title };\r\n      const response = await axios.get(base_url, { params });\r\n      if (typeof response.data.results[0].poster_path !== 'undefined') {\r\n        const poster_path = response.data.results[0].poster_path;\r\n        const base_img_url = 'https://image.tmdb.org/t/p/';\r\n        const size = 'w500';\r\n        const img_url = `${base_img_url}${size}${poster_path}`;\r\n        setImgUrl(img_url);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card style={{ width: '18rem', height: '100%', display: 'flex' }} onClick={props.onClick}>\r\n      <Card.Img variant=\"top\" src={imgUrl} />\r\n      <Card.Body>\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Text>{overview.slice(0, 100)}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}